@model FarewellMyBeloved.ViewModels.FarewellPeopleIndexViewModel
@{
    ViewData["Title"] = "Farewell People - Admin";

    
    string Truncate(string s, int max = 50) =>
        string.IsNullOrEmpty(s) ? s : (s.Length <= max ? s : s.Substring(0, max) + "...");
}

<div class="container py-5">
    <div class="row py-3">
        <div class="col-lg-12">
            <h2 class="mb-4">Farewell People Management</h2>
            
            @if (!Model.FarewellPeople.Any())
            {
                <div class="alert alert-info">
                    No farewell people found.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>Name</th>
                                <th>Slug</th>
                                <th>Email</th>
                                <th>Created</th>
                                <th>Public</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var person in Model.FarewellPeople)
                            {
                                <tr>
                                    <td>@Truncate(person.Name, 40)</td>
                                    <td>@Truncate(person.Slug, 20)</td>
                                    <td>@(person.Email ?? "N/A")</td>
                                    <td>@person.CreatedAt.ToString("yyyy-MM-dd")</td>
                                    <td>
                                        <span class="badge @(person.IsPublic ? "bg-success" : "bg-secondary")">
                                            @(person.IsPublic ? "Public" : "Private")
                                        </span>
                                    </td>
                                    <td>
                                        <a asp-controller="Home" asp-action="Slug" asp-route-slug="@person.Slug" class="btn btn-sm btn-outline-primary" target="_blank">View</a>
                                        <a asp-controller="Admin" asp-action="EditFarewellPerson" asp-route-id="@person.Id" class="btn btn-sm btn-outline-secondary">Edit</a>
                                        <a asp-controller="Admin" asp-action="DeleteFarewellPerson" asp-route-id="@person.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination Controls -->
                @if (Model.TotalPages > 1)
                {
                    <nav aria-label="Farewell people pagination">
                        <ul class="pagination justify-content-center">
                            @if (Model.PageNumber > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("FarewellPeople", new { page = Model.PageNumber - 1 })">Previous</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">Previous</span>
                                </li>
                            }

                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                if (i == Model.PageNumber)
                                {
                                    <li class="page-item active">
                                        <span class="page-link">@i</span>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="@Url.Action("FarewellPeople", new { page = i })">@i</a>
                                    </li>
                                }
                            }

                            @if (Model.PageNumber < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("FarewellPeople", new { page = Model.PageNumber + 1 })">Next</a>
                                </li>
                            }
                            else
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">Next</span>
                                </li>
                            }
                        </ul>
                    </nav>
                }

                <div class="row mt-3">
                    <div class="col-12">
                        <small class="text-muted">
                            Showing @(Model.FarewellPeople.Count * (Model.PageNumber - 1) + 1) to
                            @(Math.Min(Model.FarewellPeople.Count * Model.PageNumber, Model.TotalItems))
                            of @Model.TotalItems entries (Page @Model.PageNumber of @Model.TotalPages)
                        </small>
                    </div>
                </div>
            }
        </div>
    </div>
</div>